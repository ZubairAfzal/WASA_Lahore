@using System.Data;
@using System.Data.SqlClient;
@using Newtonsoft.Json;
@model IEnumerable<TubewellDataClass>


<script type="text/javascript">
    $(document).ready(function () {
        @Html.Raw(ViewData["chartData"])
        chart1.render();
        function toogleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            } else {
                e.dataSeries.visible = true;
            }
            chart1.render();
        }
        if (!$.fn.DataTable.isDataTable('#tubeWellTable')) {
            $('#tubeWellTable').DataTable({
                "scrollX": true,
                "paging": false,
                "ordering": false,
                "info": false,
                "columnDefs": [
                    { "className": "dt-center", "targets": "_all" }
                ],
                dom: 'Bfrtip',
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf', 'print'
                //]
                buttons: [
                    {
                        extend: 'excelHtml5',
                        title: '@Session["ReportTitle"]'
                    },
                    {
                        extend: 'pdfHtml5',
                        title: '@Session["ReportTitle"]'
                    }
                ]
            });
        }
    });
</script>
<div class="portlet-title">
    <div class="row" style="opacity:0.9">
        <div class="portlet-body">
            <div class="widget stacked">
                <div class="widget-content">
                    <div>
                        <center>
                            <div id="chartContainer1" style="width: 95%; height: 500px"></div>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<hr style="margin-top: 1rem; margin-bottom: 1rem; border: 0; border-top: 1px solid rgba(0, 0, 0, 0.1);" />

<div class="row" style="opacity:0.9">
    <div class="portlet-body">
        <div class="widget stacked" style="margin-top:70px; ">
            <div class="widget-content">
                <div>
                    <center>

                        <table id="tubeWellTable" class="display" style="width:100%;">
                            <thead>
                                <tr style="background-color: #a8c9cd;">
                                    <th>Name 0f Location</th>
                                    <th>Vibration in mm/s (x)</th>
                                    <th>Vibration in mm/s (y)</th>
                                    <th>Vibration in mm/s (z)</th>
                                    @*<th>Vibration in m/s2 (Avg)</th>
                                    <th>Vibration in m/s (Avg)</th>
                                    <th>Vibration in m (Avg)</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                <tr>
                                    <td>@item.locationName</td>
                                    @if (item.pumpStatus.Count == 0)
                                    {
                                        <td>-</td>
                                        <td>-</td>
                                        <td>-</td>
                                        @*<td>-</td>
            <td>-</td>*@
                                    }
                                    else
                                    {
                                        double Vibration_m_s_2s = 0;
                                        double Vibration_m_ss = 0;
                                        double Vibration_ms = 0;
                                        double pressures = 0;
                                        int counter = 0;
                                        int counterP = 0;
                                        for (int i = 0; i < item.pumpStatus.Count; i++)
                                        {
                                            @*if (item.pumpStatus[i] == 1)
                                            {
                                                Vibration_m_s_2s += item.Vibration_m_s_2[i];
                                                Vibration_m_ss += Math.Abs(item.Vibration_m_s[i]);
                                                Vibration_ms += item.Vibration_m[i];
                                                counter++;
                                            }
                                            else
                                            {

                                            }*@
                                        }
                                        if (counter == 0)
                                        {
                                            counter = 1;
                                        }
                                        if (counterP == 0)
                                        {
                                            counterP = 1;
                                        }
                                        Vibration_m_s_2s = Math.Round((Vibration_m_s_2s / counter), 2);
                                        Vibration_m_ss = Math.Round((Vibration_m_ss / counter), 2);
                                        Vibration_ms = Math.Round((Vibration_ms / counter), 2);
                                        @*<td>@Vibration_m_s_2s</td>*@
                                        <td>@Vibration_m_s_2s</td>
                                        <td>@Vibration_m_ss</td>
                                        <td>@Vibration_ms</td>
                                        @*<td>@Vibration_ms</td>*@
                                    }
                                </tr>
                                }
                            </tbody>
                        </table>


                    </center>
                </div>
            </div>
        </div>
    </div>
</div>



