@using System.Data;
@using System.Data.SqlClient;
@using Newtonsoft.Json;
@using System.Linq;
@model IEnumerable<TubewellDataClass>

@{
    ViewBag.Title = "Parameter Wise Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<link href="~/Content/custom.css" rel="stylesheet" />
<link href="~/Content/datatables.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script type="text/javascript" src="~/Metronic/assets/global/scripts/datatable.js"></script>
<script type="text/javascript" src="~/Metronic/assets/global/plugins/datatables/datatables.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        @Html.Raw(ViewData["chartData"])
        chart.render();
        //console.log(options);
        //options = options.replace(/&quot;/g, '"');
        //$("#chartContainer1").CanvasJSChart(options);
        $('#tubeWellTable').DataTable();
    });
</script>

<div class="row">
    <div class="col-lg-12 col-xs-12 col-sm-12">
        <div class="portlet light ">
            <div class="portlet-body">


                <!-- DataTable Row -->

                <div class="row">
                    <div class="col-md-12">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        <div class="portlet light bordered">
                            <div class="portlet-title">
                                <div class="caption font-dark">
                                    <i class="icon-docs font-dark"></i>
                                    <span class="caption-subject bold uppercase">Parameter Wise Chart</span>
                                </div>
                                <div class="tools"> </div>
                            </div>
                            <div class="portlet-body">
                                <div id="StatusReportDiv">
                                    <div id="chartContainer1" style="width: 95%; height: 500px"></div>
                                </div>
                            </div>
                        </div>
                        <!-- END EXAMPLE TABLE PORTLET-->
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        <div class="portlet light bordered">
                            <div class="portlet-title">
                                <div class="caption font-dark">
                                    <i class="icon-docs font-dark"></i>
                                    <span class="caption-subject bold uppercase">Parameter Wise Report</span>
                                </div>
                                <div class="tools"> </div>
                            </div>
                            <div class="portlet-body">
                                <div class="widget stacked">
                                    <div class="widget-content">
                                        <div>
                                            <center>
                                                <table id="tubeWellTable" class="display" style="width:100%">
                                                    <thead>
                                                        <tr style="background-color: #a8c9cd;">
                                                            <th>Name of Location</th>
                                                            <th>Motor Rating</th>
                                                            <th>Total Working Hours</th>
                                                            <th>Power Factor</th>
                                                            <th>Average Voltage</th>
                                                            <th>Average Current</th>
                                                            <th>Frequency (Hz)</th>
                                                            <th>PKVA</th>
                                                            <th>PKVAR</th>
                                                            <th>PKW</th>
                                                            <th>Units Consumed</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in Model)
                                                        {
                                                            <tr>
                                                                <td>@item.locationName</td>
                                                                <td>@item.Specification</td>
                                                                @if (item.pumpStatus.Count == 0)
                                                                {
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                    <td>-</td>
                                                                }
                                                                else
                                                                {
                                                                    double pff = 0;
                                                                    double i1s = 0;
                                                                    double i2s = 0;
                                                                    double i3s = 0;
                                                                    double pkvas = 0;
                                                                    double pkvars = 0;
                                                                    double pkws = 0;
                                                                    int counter = 0;
                                                                    for (int i = 0; i < item.pumpStatus.Count; i++)
                                                                    {
                                                                        if (item.pumpStatus[i] == 1)
                                                                        {
                                                                            pff += item.powerFactor[i];
                                                                            i1s += item.I1[i];
                                                                            i2s += item.I2[i];
                                                                            i3s += item.I3[i];
                                                                            pkvas += item.pkva[i];
                                                                            pkvars += item.pkvar[i];
                                                                            pkws += item.pkw[i];
                                                                            counter++;
                                                                        }
                                                                        else
                                                                        {

                                                                        }
                                                                    }
                                                                    if (counter == 0)
                                                                    {
                                                                        counter = 1;
                                                                    }
                                                                    pff = Math.Round((pff / counter), 2);
                                                                    i1s = Math.Round((i1s / counter), 2);
                                                                    i2s = Math.Round((i2s / counter), 2);
                                                                    i3s = Math.Round((i3s / counter), 2);
                                                                    pkvas = Math.Round((pkvas / counter), 2);
                                                                    pkvars = Math.Round((pkvars / counter), 2);
                                                                    pkws = Math.Round((pkws / counter), 2);
                                                                    double averageis = Math.Round(((i1s + i2s + i3s) / 3), 2);
                                                                    var pp = TimeSpan.FromMinutes((item.WorkingInHours) * 60);
                                                                    int phour = (int)pp.TotalHours;
                                                                    int pmin = (int)pp.Minutes;
                                                                    int psec = (int)pp.Seconds;
                                                                    string pstr = " " + phour.ToString() + " Hours, " + pmin.ToString() + " Minutes";
                                                                    <td>@pstr</td>
                                                                    <td>@pff</td>
                                                                    <td>@(Math.Round(((item.V1N.FirstOrDefault() + item.V2N.FirstOrDefault() + item.V3N.FirstOrDefault()) / 3), 2))</td>
                                                                    <td>@averageis</td>
                                                                    <td>@item.frequency.FirstOrDefault()</td>
                                                                    <td>@pkvas</td>
                                                                    <td>@pkvars</td>
                                                                    <td>@pkws</td>
                                                                    <td>@Math.Round((pkws * item.WorkingInHours), 2)</td>
                                                                }
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </center>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- END EXAMPLE TABLE PORTLET-->
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>



